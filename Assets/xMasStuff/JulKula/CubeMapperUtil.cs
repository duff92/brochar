using UnityEngine;
using System.Collections;


public class CubeMapperUtil : MonoBehaviour
{
    /*
	 * Attach to gameobject to set cubemap generated by cubemapper object
	 * 
	 * Scans each material for keywords and sets the cubemap accordingly
	 * 
	 */

    CubeMapper thisCubemapper;           //Cubemapper reference
    public string[] cubemapKeywords;            //Shader keywords to set the cubemap
    Material m;



    bool isCubemapSet = false;


    void Start()
    {
        gameObject.AddComponent<CubeMapper>();
        thisCubemapper = GetComponent<CubeMapper>();

        SetCubemap();
    }

    void Update()
    {
        if (isCubemapSet)
        {
            UpdateCubemap();
        }
        
    }

    void SetCubemap()
    {
        //Loops the materials and sets the cubemap
        Material[] materials = GetComponent<Renderer>().materials;

        m = materials[0];

        foreach (Material thisMaterial in materials)
        {
            foreach (string thisKeyword in cubemapKeywords)
            {
                if (thisMaterial.HasProperty(thisKeyword))
                    thisMaterial.SetTexture(thisKeyword, thisCubemapper.GetRenderTexture());
            }
        }

        isCubemapSet = true;

    }

    void UpdateCubemap()
    {
       // Debug.Log("Updating!");
        m.SetTexture("_Cube", thisCubemapper.UpdateRenderTexture());

    }

}